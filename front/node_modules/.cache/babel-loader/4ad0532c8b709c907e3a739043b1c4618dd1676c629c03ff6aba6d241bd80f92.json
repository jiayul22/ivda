{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Plotly from 'plotly.js/dist/plotly';\nexport default {\n  name: \"LinePlot\",\n  props: [\"selectedCompany\", \"selectedAlgorithm\"],\n  data: () => ({\n    LinePlotData: {\n      x: [],\n      y: []\n    }\n  }),\n  mounted() {\n    this.fetchData();\n  },\n  methods: {\n    async fetchData() {\n      // req URL to retrieve single company from backend\n      console.log(\"linepolt \" + this.$props.selectedCompany);\n      var reqUrl = 'http://127.0.0.1:5000/companies/' + this.$props.selectedCompany + '?algorithm=' + this.$props.selectedAlgorithm;\n      console.log(\"ReqURL \" + reqUrl);\n\n      // await response and data\n      const response = await fetch(reqUrl);\n      const responseData = await response.json();\n\n      // transform data to usable by lineplot\n      responseData.profit.forEach(profit => {\n        console.log(profit.year);\n        this.LinePlotData.x.push(profit.year);\n        this.LinePlotData.y.push(profit.value);\n      });\n\n      // draw the lineplot after the data is transformed\n      this.drawLinePlot();\n    },\n    drawLinePlot() {\n      var trace1 = {\n        x: this.LinePlotData.x,\n        y: this.LinePlotData.y,\n        type: 'scatter'\n      };\n      var data = [trace1];\n      var layout = {};\n      var config = {\n        responsive: true,\n        displayModeBar: false\n      };\n      Plotly.newPlot('myLinePlot', data, layout, config);\n    }\n  }\n};","map":{"version":3,"mappings":";AAYA;AAEA;EACAA;EACAC;EACAC;IACAC;MAAAC;MAAAC;IAAA;EACA;EACAC;IACA;EACA;EACAC;IACA;MACA;MACAC;MACA,gFACA;MACAA;;MAEA;MACA;MACA;;MAEA;MACAC;QACAD;QACA;QACA;MACA;;MAEA;MACA;IACA;IACAE;MACA;QACAN;QACAC;QACAM;MACA;MACA;MACA;MACA;QAAAC;QAAAC;MAAA;MACAC;IACA;EACA;AACA","names":["name","props","data","LinePlotData","x","y","mounted","methods","console","responseData","drawLinePlot","type","responsive","displayModeBar","Plotly"],"sourceRoot":"src/components","sources":["barPlot.vue"],"sourcesContent":["<template>\n  <div>\n    <v-row align=\"center\" justify=\"center\" class=\"mt-1 mb-0\">\n      <h3>Profit View of Company: {{ $props.selectedCompany }}</h3>\n    </v-row>\n    <div style=\"height: 90vh\">\n      <div id='myLinePlot' style=\"height: inherit\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Plotly from 'plotly.js/dist/plotly';\n\nexport default {\n  name: \"LinePlot\",\n  props: [\"selectedCompany\", \"selectedAlgorithm\"],\n  data: () => ({\n    LinePlotData: {x: [], y: []}\n  }),\n  mounted() {\n    this.fetchData()\n  },\n  methods: {\n    async fetchData() {\n      // req URL to retrieve single company from backend\n      console.log(\"linepolt \" + this.$props.selectedCompany)\n      var reqUrl = 'http://127.0.0.1:5000/companies/' + this.$props.selectedCompany +\n          '?algorithm=' + this.$props.selectedAlgorithm\n      console.log(\"ReqURL \" + reqUrl)\n\n      // await response and data\n      const response = await fetch(reqUrl)\n      const responseData = await response.json();\n\n      // transform data to usable by lineplot\n      responseData.profit.forEach((profit) => {\n        console.log(profit.year)\n        this.LinePlotData.x.push(profit.year)\n        this.LinePlotData.y.push(profit.value)\n      })\n\n      // draw the lineplot after the data is transformed\n      this.drawLinePlot()\n    },\n    drawLinePlot() {\n      var trace1 = {\n        x: this.LinePlotData.x,\n        y: this.LinePlotData.y,\n        type: 'scatter'\n      };\n      var data = [trace1];\n      var layout = {}\n      var config = {responsive: true, displayModeBar: false}\n      Plotly.newPlot('myLinePlot', data, layout, config);\n    }\n  }\n}\n\n\n</script>\n\n<style scoped>\n\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
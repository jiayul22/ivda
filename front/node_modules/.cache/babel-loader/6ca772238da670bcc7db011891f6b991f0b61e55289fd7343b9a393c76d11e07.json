{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Plotly from 'plotly.js/dist/plotly';\nexport default {\n  name: \"LinePlot\",\n  data: () => ({\n    LinePlotData: {\n      x: [],\n      y: []\n    },\n    responseData: {\n      'profit': [{\n        'year': 2021,\n        'value': 33364\n      }, {\n        'year': 2020,\n        'value': 21331\n      }, {\n        'year': 2019,\n        'value': 11588\n      }, {\n        'year': 2018,\n        'value': 10073\n      }, {\n        'year': 2017,\n        'value': 3033\n      }]\n    }\n  }),\n  mounted() {\n    this.fetchData();\n  },\n  methods: {\n    async fetchData() {\n      // transform data to usable by lineplot\n      this.responseData.profit.forEach(profit => {\n        console.log(profit.year);\n        this.LinePlotData.x.push(profit.year);\n        this.LinePlotData.y.push(profit.value);\n      });\n\n      // draw the lineplot after the data is transformed\n      this.drawLinePlot();\n    },\n    drawLinePlot() {\n      var trace1 = {\n        x: this.LinePlotData.x,\n        y: this.LinePlotData.y,\n        type: 'bar'\n      };\n      var data = [trace1];\n      var layout = {\n        // remove the layout of title\n        autosize: false,\n        width: 500,\n        height: 500,\n        margin: {\n          l: 50,\n          r: 50,\n          b: 100,\n          t: 100,\n          pad: 4\n        }\n      };\n      var config = {\n        responsive: true,\n        displayModeBar: false\n      };\n      Plotly.newPlot('myLinePlot', data, layout, config);\n    }\n  }\n};","map":{"version":3,"mappings":";AAaA;AAEA;EAEAA;EAEAC;IACAC;MAAAC;MAAAC;IAAA;IACAC;MAAA;QAAA;QAAA;MAAA;QAAA;QAAA;MAAA;QAAA;QAAA;MAAA;QAAA;QAAA;MAAA;QAAA;QAAA;MAAA;IAAA;EACA;EAEAC;IACA;EACA;EAEAC;IACA;MACA;MACA;QACAC;QACA;QACA;MACA;;MAEA;MACA;IACA;IACAC;MACA;QACAN;QACAC;QACAM;MACA;MACA;MACA;QACA;QACAC;QACAC;QACAC;QACAC;UACAC;UACAC;UACAC;UACAC;UACAC;QACA;MACA;MACA;QAAAC;QAAAC;MAAA;MACAC;IACA;EACA;AAEA","names":["name","data","LinePlotData","x","y","responseData","mounted","methods","console","drawLinePlot","type","autosize","width","height","margin","l","r","b","t","pad","responsive","displayModeBar","Plotly"],"sourceRoot":"src/components","sources":["barPlot.vue"],"sourcesContent":["<template>\n  <v-card height=\"260px\">\n    <v-row align=\"center\" justify=\"center\" class=\"mt-0 mb-0\">\n      <h3>Profit View of Company</h3>\n    </v-row>\n\n    <div style=\"height: 50vh\" class=\"pt-0 pb-0 mt-0 mb-0\">\n      <div id='myLinePlot' style=\"height: inherit\"></div>\n    </div>\n  </v-card>\n</template>\n\n<script>\nimport Plotly from 'plotly.js/dist/plotly';\n\nexport default {\n\n  name: \"LinePlot\",\n\n  data: () => ({\n    LinePlotData: {x: [], y: []},\n    responseData:{ 'profit': [{'year': 2021, 'value': 33364}, {'year': 2020, 'value': 21331}, {'year': 2019, 'value': 11588}, {'year': 2018, 'value': 10073}, {'year': 2017, 'value': 3033}]}\n  }),\n  \n  mounted() {\n    this.fetchData()\n  },\n\n  methods: {\n    async fetchData() {\n      // transform data to usable by lineplot\n      this.responseData.profit.forEach((profit) => {\n        console.log(profit.year)\n        this.LinePlotData.x.push(profit.year)\n        this.LinePlotData.y.push(profit.value)\n      })\n\n      // draw the lineplot after the data is transformed\n      this.drawLinePlot()\n    },\n    drawLinePlot() {\n      var trace1 = {\n        x: this.LinePlotData.x,\n        y: this.LinePlotData.y,\n        type: 'bar'\n      };\n      var data = [trace1];\n      var layout = {\n        // remove the layout of title\n        autosize: false,\n        width: 500,\n        height: 500,\n        margin: {\n          l: 50,\n          r: 50,\n          b: 100,\n          t: 100,\n          pad: 4\n        },\n      };\n      var config = {responsive: true, displayModeBar: false}\n      Plotly.newPlot('myLinePlot', data, layout, config);\n    }\n  }\n  \n}\n</script>\n\n<style scoped>\n\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}